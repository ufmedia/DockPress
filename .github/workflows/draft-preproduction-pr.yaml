name: Create Draft PR to Preproduction

on:
  pull_request:
    types: [opened]
    branches:
      - development

  push:
    branches:
      - feature/Another-example-branch

jobs:
  create-draft-pr:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub-provided token for authentication

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Fetch existing PRs
        id: fetch-prs
        run: |
          # Fetch open PRs from development to preproduction, including draft PRs
          existing_prs=$(gh pr list --base preproduction --head development --state open --json number,isDraft --jq '.[] | select(.isDraft == true or .number != null)')
          if [[ -z "$existing_prs" ]]; then
            echo "No existing PR found from development to preproduction."
          else
            pr_number=$(echo $existing_prs | jq -r '.number')
            echo "pr_number=$pr_number" >> $GITHUB_ENV
          fi

      - name: Create new draft PR
        if: ${{ env.pr_number == '' }}  # Only run if no existing PR is found
        run: |
          # Create a new draft PR from development to preproduction using markdown formatting
          new_pr=$(gh pr create --base preproduction --head development --draft --title "Merge development into preproduction" --body "## PRs going into development:\n\n- [${{ github.event.pull_request.title }}](https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }})\n")
          echo "new_pr_number=$(echo $new_pr | grep -o '#[0-9]*' | sed 's/#//')" >> $GITHUB_ENV

      - name: Fetch description of existing draft PR
        if: ${{ env.pr_number != '' }}  # Only run if an existing PR is found
        run: |
          description=$(gh pr view $pr_number --json body --jq '.body')
          echo "description=$description" >> $GITHUB_ENV

      - name: Append to draft PR description (no duplicates)
        if: ${{ env.pr_number != '' && env.description != '' }}  # Only run if an existing PR is found
        run: |
          # Prepare the new PR link and title with proper markdown formatting
          new_entry="- [${{ github.event.pull_request.title }}](https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }})"
          
          # Check if the PR entry is already in the description
          if echo "$description" | grep -qF "$new_entry"; then
            echo "PR entry already exists, skipping append."
          else
            gh pr edit $pr_number --add-body "\n\n$new_entry"
          fi

      - name: Output result
        run: |
          echo "Existing PRs: $existing_prs"